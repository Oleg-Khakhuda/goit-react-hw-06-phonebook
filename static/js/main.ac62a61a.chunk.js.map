{"version":3,"sources":["Phonebook/ContactForm/ContactForm.js","Phonebook/ContactsList/ContactsList.js","Phonebook/Filter/Filter.js","App.js","index.js","Phonebook/ContactForm/ContactForm.module.css","Phonebook/ContactsList/ContactsList.module.css","Phonebook/Filter/Filter.module.css"],"names":["ContactForm","addNewContact","useState","name","setName","number","setNumber","inputNameId","uuidv4","inputNumberId","handleChange","e","currentTarget","value","resetForm","className","s","form","onSubmit","preventDefault","label","htmlFor","input","type","id","pattern","title","required","onChange","button","ContactsList","contacts","handleDelete","list","map","contact","listItem","deleteButton","onClick","Filter","changeFilter","inputFilterId","App","localContacts","localStorage","getItem","JSON","parse","setContacts","filter","setFilter","useEffect","window","setItem","stringify","find","alert","prev","filterValue","target","normalizedFilter","toLowerCase","includes","handleFilter","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.ac62a61a.chunk.js","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport s from './ContactForm.module.css';\n\nconst ContactForm = ({ addNewContact }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const inputNameId = uuidv4();\n  const inputNumberId = uuidv4();\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    addNewContact(name, number);\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setNumber('');\n    setName('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label} htmlFor={inputNameId}>\n        Name\n      </label>\n      <input\n        className={s.input}\n        type=\"text\"\n        value={name}\n        id={inputNameId}\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        onChange={handleChange}\n      />\n      <label className={s.label} htmlFor={inputNumberId}>\n        Number\n      </label>\n      <input\n        className={s.input}\n        type=\"tel\"\n        value={number}\n        id={inputNumberId}\n        name=\"number\"\n        pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n        title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n        required\n        onChange={handleChange}\n      />\n      <button className={s.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","import s from './ContactsList.module.css';\nimport PropTypes from 'prop-types';\n\nconst ContactsList = ({ contacts, handleDelete }) => {\n  return (\n    <ul className={s.list}>\n      {contacts.map(contact => (\n        <li className={s.listItem} key={contact.id}>\n          {contact.name}: {contact.number}\n          <button\n            className={s.deleteButton}\n            type=\"button\"\n            id={contact.id}\n            onClick={handleDelete}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactsList;\n\nContactsList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  handleDelete: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport s from './Filter.module.css';\n\nconst Filter = ({ changeFilter }) => {\n  const inputFilterId = uuidv4();\n\n  return (\n    <form className={s.form}>\n      <label className={s.label} htmlFor={inputFilterId}>\n        Find contacts by name\n      </label>\n      <input\n        className={s.input}\n        type=\"text\"\n        id={inputFilterId}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        onChange={changeFilter}\n      />\n    </form>\n  );\n};\n\nexport default Filter;\n\nFilter.propTypes = {\n  changeFilter: PropTypes.func.isRequired,\n};\n","import ContactForm from './Phonebook/ContactForm/ContactForm';\nimport ContactsList from './Phonebook/ContactsList/ContactsList';\nimport Filter from './Phonebook/Filter/Filter';\nimport { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst App = () => {\n  const [contacts, setContacts] = useState(() => {\n    const localContacts = localStorage.getItem('contacts');\n    \n    if (localContacts) {\n      return JSON.parse(localContacts);\n    } else {\n      return [];\n    }\n  });\n  \n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addNewContact = (name, number) => {\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    if (contacts.find(contact => contact.name === name)) {\n      alert(`${name} is already in contacts!`);\n    } else if (contacts.find(contact => contact.number === number)) {\n      alert(`${number} is already in contacts!`);\n    } else setContacts(prev => [...prev, contact]);\n  };\n\n  const changeFilter = e => {\n    const filterValue = e.target.value;\n    setFilter(filterValue);\n  };\n\n  const handleFilter = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  const handleDelete = e => {\n    setContacts(contacts.filter(contact => contact.id !== e.target.id));\n  };\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm addNewContact={addNewContact} />\n      <h1>Contacts</h1>\n      <Filter changeFilter={changeFilter} />\n      <ContactsList contacts={handleFilter()} handleDelete={handleDelete} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1lMXN\",\"input\":\"ContactForm_input__pYguw\",\"label\":\"ContactForm_label__1wX2y\",\"button\":\"ContactForm_button__2EKA9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__Hx9UB\",\"listItem\":\"ContactsList_listItem__22Ntf\",\"deleteButton\":\"ContactsList_deleteButton__3l4Ks\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Filter_form__2XfHX\",\"label\":\"Filter_label__1kivQ\",\"input\":\"Filter_input__2qfm0\"};"],"sourceRoot":""}